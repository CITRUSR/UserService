syntax = "proto3";

option csharp_namespace = "UserService";

package Group;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";

service GroupService{
  rpc CreateGroup (CreateGroupRequest) returns (CreateGroupResponse);
  rpc DeleteGroup (DeleteGroupRequest) returns (DeleteGroupResponse);
  rpc EditGroup (EditGroupRequest) returns (GroupModel);
  rpc GraduateGroups (GraduateGroupsRequest) returns (GraduateGroupsResponse);
  rpc TransferGroupsToNextSemester (TransferGroupsToNextSemesterRequest) returns (TransferGroupsToNextSemesterResponse);
  rpc TransferGroupsToNextCourse (TransferGroupsToNextCourseRequest) returns (TransferGroupsToNextCourseResponse);
  rpc GetGroupById (GetGroupByIdRequest) returns (GroupModel);
  rpc GetGroups (GetGroupsRequest) returns (GetGroupsResponse);
}

//If IsGraduated true then GraduatedAt is not null else GraduatedAt is null
message GroupModel{
  int32 Id = 1;
  int32 SpecialityId = 2;
  string CuratorId = 3;
  uint32 CurrentCourse = 4;
  uint32 CurrentSemester = 5;
  uint32 SubGroup = 6;
  google.protobuf.Timestamp StartedAt = 7;
  google.protobuf.Timestamp GraduatedAt = 8;
  bool IsGraduated = 9;
}

message CreateGroupRequest{
  int32 SpecialityId = 1;
  string CuratorId = 2;
  uint32 CurrentCourse = 3;
  uint32 CurrentSemester = 4;
  uint32 SubGroup = 5;
  google.protobuf.Timestamp StartedAt = 6;
}

message CreateGroupResponse{
  ChangeGroupResponseModel Group = 1;
}

message GraduateGroupsRequest{
  repeated int32 GroupsId = 1;
  google.protobuf.Timestamp GraduatedTime = 2;
}

message ChangeGroupResponseModel{
  int32 Id = 1;
  string Abbr = 2;
  int32 CurrentCourse = 3;
  int32 SubGroup = 4;
}

message GraduateGroupsResponse{
  repeated ChangeGroupResponseModel groups = 1;
}

//If be empty then will be taking every group
message TransferGroupsToNextSemesterRequest{
  repeated int32 IdGroups = 1;
}

message TransferGroupsToNextSemesterResponse{
  repeated ChangeGroupResponseModel Groups = 1;
}

message TransferGroupsToNextCourseRequest{
  repeated int32 IdGroups = 1;
}

message TransferGroupsToNextCourseResponse{
  repeated ChangeGroupResponseModel Groups = 1;
}

message DeleteGroupRequest{
  int32 Id = 1;
}

message DeleteGroupResponse{
  int32 Id = 1;
}

message EditGroupRequest{
  int32 Id = 1;
  int32 SpecialityId = 2;
  string CuratorId = 3;
  uint32 CurrentCourse = 4;
  uint32 CurrentSemester = 5;
  uint32 SubGroup = 6;
}

message GetGroupByIdRequest{
  int32 Id = 1;
}

enum GroupSortState{
  GroupAsc = 0;
  GroupDesc = 1;
}

message GetGroupsRequest{
  google.protobuf.StringValue SearchString = 1;
  int32 Page = 2;
  int32 PageSize = 3;
  GroupSortState SortState = 4;
}

message GetGroupsResponse{
  repeated GroupModel Groups = 1;
  int32 LastPage = 2;
}